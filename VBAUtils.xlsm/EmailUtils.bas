Attribute VB_Name = "EmailUtils"
'Sub createEmail(toStr As String, ccStr As String, _
'        subjectStr As String, content As String, Optional sendFlag As Boolean = False)

'Function GetEmailDomainFromAddress(emailAddress As String) As String
'Function IsEmailAddressInternal(emailAddress As String, folderString As String, nextRow As Long) As Boolean

Sub createEmail(toStr As String, ccStr As String, _
        subjectStr As String, content As String, Optional sendFlag As Boolean = False)
Dim myOutlook As Outlook.Application
Dim outMail As Outlook.MailItem
Dim myNameSpace As Namespace
Dim myFolders As Outlook.Folders
Dim myHTMLBody As String

    Set myOutlook = CreateObject("Outlook.Application")
    Set myNameSpace = myOutlook.GetNamespace("MAPI")
    Set myFolders = myNameSpace.Folders
    
    
    Set outMail = myOutlook.CreateItem(olMailItem)

    
    With outMail
    

        .To = toStr
        .CC = ccStr
        .Subject = subjectStr
        .body = content
    
        If sendFlag = False Then
            .Save
        Else
            .display
        End If
    End With
    
End Sub

Function GetEmailDomainFromAddress(emailAddress As String) As String
Dim domainName As String, msg As String
Dim extArray As Variant
Dim i As Long

    extArray = Array(".com.sa", ".co.uk", ".com", ".io", ".dev", ".net", ".co", ".se", ".dk", ".de", ".uz", ".org", ".eu", ".tech", ".jp", ".us")

    'On Error GoTo err
    domainName = Split(emailAddress, "@")(1)
    
    For i = 0 To UBound(extArray)
        domainName = Replace(domainName, extArray(i), "")
    Next i
    
    'If InStr(1, domainName, ".") <> 0 Then
        'Debug.Print "incorrect domain :" & domainName
    'End If
    
    domainName = Replace(domainName, "'", "") 'on occasion there is an errant '
    
    GetEmailDomainFromAddress = domainName
    'On Error Resume Next

err:
    If err.Number <> 0 Then
        msg = "Error # " & Str(err.Number) & " was generated by " & err.Source & Chr(13) & "Error Line: " & Erl & Chr(13) & err.Description
        'Debug.Print "Error", err.HelpFile, err.HelpContext
    End If
    
End Function

Function IsEmailAddressInternal(emailAddress As String, folderString As String, nextRow As Long) As Boolean

    IsEmailAddressInternal = False
    If Left(LCase(emailAddress), Len("/O=EXCHANGELABS")) = LCase("/O=EXCHANGELABS") Then
        IsEmailAddressInternal = True
        'Application.StatusBar = folderString & ": row:" & Str(nextRow) & emailAddress & ": INTERNAL - SKIPPING"
    End If
End Function
